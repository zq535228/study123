import{_ as i,c as a,b as n,o as l}from"./app-CQ4DyvhI.js";const e={};function h(t,s){return l(),a("div",null,s[0]||(s[0]=[n(`<p>在现代Web应用程序中，跨域资源共享（CORS）是一个重要的安全特性。它允许或限制不同来源的Web应用程序访问服务器资源。在ASP.NET Core中，我们可以通过配置CORS策略来控制这些访问。</p><h2 id="配置步骤" tabindex="-1"><a class="header-anchor" href="#配置步骤"><span>配置步骤</span></a></h2><h3 id="_1-添加cors服务" tabindex="-1"><a class="header-anchor" href="#_1-添加cors服务"><span>1. 添加CORS服务</span></a></h3><p>首先，在 <code>Program.cs</code> 文件中，我们需要添加CORS服务。我们可以通过 <code>AddCors</code> 方法来定义一个CORS策略。在这个例子中，我们定义了一个名为 <code>&quot;CorsPolicy&quot;</code> 的策略：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">builder</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">Services</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">AddCors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">options</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">    options</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">AddPolicy</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CorsPolicy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> builder</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> {</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">        builder</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">WithOrigins</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">http://localhost:3000</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">WithOrigins</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">https://ai.jianyandashu.com</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">)</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">AllowAnyMethod</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">AllowAnyHeader</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">AllowCredentials</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">()</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">            .</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">SetIsOriginAllowed</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">_</span><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;"> =&gt;</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">  // 临时添加，用于调试</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">    });</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>AllowAnyMethod</strong>: 允许任何HTTP方法（GET, POST, PUT, DELETE等）。</li><li><strong>AllowAnyHeader</strong>: 允许任何请求头。</li><li><strong>AllowCredentials</strong>: 允许请求携带凭证（如Cookies）。</li><li><strong>SetIsOriginAllowed</strong>: 这里使用了 <code>SetIsOriginAllowed(_ =&gt; true)</code>，这将允许所有来源的请求。这是一个临时的调试设置，建议在生产环境中使用更严格的配置。</li></ul><h3 id="_2-使用cors中间件" tabindex="-1"><a class="header-anchor" href="#_2-使用cors中间件"><span>2. 使用CORS中间件</span></a></h3><p>在构建应用程序后，我们需要在中间件管道中使用定义的CORS策略：</p><div class="language-csharp line-numbers-mode" data-highlighter="shiki" data-ext="csharp" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#CB7676;">var</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;"> app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;"> builder</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">Build</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">();</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#BD976A;">app</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">.</span><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">UseCors</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">(</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">CorsPolicy</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>这行代码确保了所有的HTTP请求都会应用我们定义的CORS策略。</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项"><span>注意事项</span></a></h2><ul><li><strong>安全性</strong>: 在生产环境中，建议根据实际需求限制允许的来源，而不是使用 <code>SetIsOriginAllowed(_ =&gt; true)</code>。</li><li><strong>策略名称</strong>: 确保在 <code>UseCors</code> 中使用的策略名称与 <code>AddCors</code> 中定义的名称一致。</li></ul><p>通过以上步骤，我们可以在ASP.NET Core应用程序中有效地配置CORS策略，确保应用程序的安全性和灵活性。</p>`,13)]))}const p=i(e,[["render",h]]),r=JSON.parse('{"path":"/article/CORS/","title":"在ASP.NET Core中配置CORS策略","lang":"en-US","frontmatter":{"title":"在ASP.NET Core中配置CORS策略","tags":["CORS","ASP.NET","Program"],"createTime":"2025/03/24 19:52:18","permalink":"/article/CORS/"},"headers":[],"readingTime":{"minutes":1.46,"words":438},"git":{"updatedTime":1742820477000,"contributors":[{"name":"bookmac","username":"bookmac","email":"zq535228@qq.com","commits":3,"avatar":"https://avatars.githubusercontent.com/bookmac?v=4","url":"https://github.com/bookmac"}]},"filePathRelative":"preview/配置CORS策略.md","categoryList":[{"id":"5ebeb6","sort":10000,"name":"preview"}]}');export{p as comp,r as data};
