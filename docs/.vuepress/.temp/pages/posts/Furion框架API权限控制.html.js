import comp from "/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Furion框架API权限控制.html.vue"
const data = JSON.parse("{\"path\":\"/posts/Furion%E6%A1%86%E6%9E%B6API%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.html\",\"title\":\"Furion 框架 API 权限控制实践\",\"lang\":\"en-US\",\"frontmatter\":{},\"headers\":[{\"level\":2,\"title\":\"简介\",\"slug\":\"简介\",\"link\":\"#简介\",\"children\":[]},{\"level\":2,\"title\":\"代码实现\",\"slug\":\"代码实现\",\"link\":\"#代码实现\",\"children\":[]},{\"level\":2,\"title\":\"关键点解析\",\"slug\":\"关键点解析\",\"link\":\"#关键点解析\",\"children\":[]},{\"level\":2,\"title\":\"权限控制方案\",\"slug\":\"权限控制方案\",\"link\":\"#权限控制方案\",\"children\":[]},{\"level\":2,\"title\":\"实践建议\",\"slug\":\"实践建议\",\"link\":\"#实践建议\",\"children\":[]},{\"level\":2,\"title\":\"总结\",\"slug\":\"总结\",\"link\":\"#总结\",\"children\":[]}],\"git\":{},\"filePathRelative\":\"posts/Furion框架API权限控制.md\",\"excerpt\":\"\\n<h2>简介</h2>\\n<p>在 Web API 开发中，权限控制是一个非常重要的环节。本文将介绍如何使用 Furion 框架的 <code>DynamicApiController</code> 特性来实现 API 的权限控制。</p>\\n<h2>代码实现</h2>\\n<p>首先，让我们看一个基本的示例：</p>\\n<div class=\\\"language-csharp line-numbers-mode\\\" data-highlighter=\\\"prismjs\\\" data-ext=\\\"cs\\\"><pre><code><span class=\\\"line\\\"><span class=\\\"token keyword\\\">using</span> <span class=\\\"token namespace\\\">Furion<span class=\\\"token punctuation\\\">.</span>DynamicApiController</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token keyword\\\">using</span> <span class=\\\"token namespace\\\">Microsoft<span class=\\\"token punctuation\\\">.</span>AspNetCore<span class=\\\"token punctuation\\\">.</span>Mvc</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token keyword\\\">namespace</span> <span class=\\\"token namespace\\\">ABCLab<span class=\\\"token punctuation\\\">.</span>Services</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\"></span>\\n<span class=\\\"line\\\"><span class=\\\"token punctuation\\\">[</span><span class=\\\"token attribute\\\"><span class=\\\"token class-name\\\">Route</span><span class=\\\"token attribute-arguments\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"LabSystem/TestCate\\\"</span><span class=\\\"token punctuation\\\">)</span></span></span><span class=\\\"token punctuation\\\">]</span>  <span class=\\\"token comment\\\">// 定义API路由前缀</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token keyword\\\">public</span> <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">TestService</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token type-list\\\"><span class=\\\"token class-name\\\">IDynamicApiController</span></span>  <span class=\\\"token comment\\\">// 继承IDynamicApiController接口</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token punctuation\\\">[</span><span class=\\\"token attribute\\\"><span class=\\\"token class-name\\\">HttpGet</span><span class=\\\"token attribute-arguments\\\"><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"@add\\\"</span><span class=\\\"token punctuation\\\">)</span></span></span><span class=\\\"token punctuation\\\">]</span>  <span class=\\\"token comment\\\">// 定义HTTP方法和路由</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token keyword\\\">public</span> <span class=\\\"token return-type class-name\\\">List<span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token punctuation\\\">&gt;</span></span> <span class=\\\"token function\\\">getNames</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token constructor-invocation class-name\\\">List<span class=\\\"token punctuation\\\">&lt;</span><span class=\\\"token keyword\\\">string</span><span class=\\\"token punctuation\\\">&gt;</span></span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token punctuation\\\">{</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token string\\\">\\\"first\\\"</span><span class=\\\"token punctuation\\\">,</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token string\\\">\\\"second\\\"</span><span class=\\\"token punctuation\\\">,</span></span>\\n<span class=\\\"line\\\">            <span class=\\\"token string\\\">\\\"third\\\"</span></span>\\n<span class=\\\"line\\\">        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span></span>\\n<span class=\\\"line\\\">    <span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\"><span class=\\\"token punctuation\\\">}</span></span>\\n<span class=\\\"line\\\"></span></code></pre>\\n<div class=\\\"line-numbers\\\" aria-hidden=\\\"true\\\" style=\\\"counter-reset:line-number 0\\\"><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div><div class=\\\"line-number\\\"></div></div></div>\"}")
export { comp, data }

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
