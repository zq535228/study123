export const redirects = JSON.parse("{}")

export const routes = Object.fromEntries([
  ["/", { loader: () => import(/* webpackChunkName: "index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/index.html.js"), meta: {"title":"Home"} }],
  ["/get-started.html", { loader: () => import(/* webpackChunkName: "get-started.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/get-started.html.js"), meta: {"title":"Get Started"} }],
  ["/posts/ASP.NET%20Core%E4%B8%AD%E9%85%8D%E7%BD%AECORS%E7%AD%96%E7%95%A5.html", { loader: () => import(/* webpackChunkName: "posts_ASP.NET Core中配置CORS策略.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/ASP.NET Core中配置CORS策略.html.js"), meta: {"_blog":{"title":"在ASP.NET Core中配置CORS策略","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<p>在现代Web应用程序中，跨域资源共享（CORS）是一个重要的安全特性。它允许或限制不同来源的Web应用程序访问服务器资源。在ASP.NET Core中，我们可以通过配置CORS策略来控制这些访问。</p>\n<h2>配置步骤</h2>\n<h3>1. 添加CORS服务</h3>\n<p>首先，在 <code>Program.cs</code> 文件中，我们需要添加CORS服务。我们可以通过 <code>AddCors</code> 方法来定义一个CORS策略。在这个例子中，我们定义了一个名为 <code>\"CorsPolicy\"</code> 的策略：</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\">builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddCors</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    options<span class=\"token punctuation\">.</span><span class=\"token function\">AddPolicy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CorsPolicy\"</span><span class=\"token punctuation\">,</span> builder <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">        builder</span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">WithOrigins</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:3000\"</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">WithOrigins</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://ai.jianyandashu.com\"</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">SetIsOriginAllowed</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 临时添加，用于调试</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"在ASP.NET Core中配置CORS策略"} }],
  ["/posts/Blazor%E4%B8%AD%E4%BD%BF%E7%94%A8JS%E7%A1%AE%E8%AE%A4%E5%AF%B9%E8%AF%9D%E6%A1%86.html", { loader: () => import(/* webpackChunkName: "posts_Blazor中使用JS确认对话框.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Blazor中使用JS确认对话框.html.js"), meta: {"_blog":{"title":"Blazor中使用JS.Confirm对话框的实现与应用","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<p>在Blazor应用程序中，我们经常需要与用户进行交互确认，例如在执行重要操作前获取用户的确认。本文将介绍如何在Blazor组件中使用<code>JS.Confirm</code>方法实现用户确认对话框，并根据用户的选择执行不同的操作。</p>\n<h2>基本用法</h2>\n<p><code>JS.Confirm</code>是通过<code>IJSRuntime</code>服务提供的JavaScript互操作方法，它返回一个布尔值，表示用户是点击了\"确定\"还是\"取消\"按钮。</p>\n<h3>代码示例</h3>\n<p>以下是一个简单的使用示例：</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\">@inject IJSRuntime JS</span>\n<span class=\"line\">@inject MessageService MessageService</span>\n<span class=\"line\"></span>\n<span class=\"line\"><span class=\"token operator\">&lt;</span><span class=\"token class-name\">Button</span> OnClick<span class=\"token operator\">=</span><span class=\"token string\">\"@Test_Success\"</span><span class=\"token operator\">&gt;</span>测试成功<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">&gt;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\">@code <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    <span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">Test_Success</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">        <span class=\"token comment\">// 显示确认对话框，并获取用户选择结果</span></span>\n<span class=\"line\">        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> JS<span class=\"token punctuation\">.</span><span class=\"token function\">Confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Test_Success\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"content\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\">        <span class=\"token comment\">// 根据用户选择执行不同的操作</span></span>\n<span class=\"line\">        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">            <span class=\"token keyword\">await</span> MessageService<span class=\"token punctuation\">.</span><span class=\"token function\">Success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击了确定\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">        <span class=\"token keyword\">else</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">            <span class=\"token keyword\">await</span> MessageService<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"点击了取消\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">}</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"Blazor中使用JS.Confirm对话框的实现与应用"} }],
  ["/posts/Blazor%E4%B8%AD%E4%BD%BF%E7%94%A8MiniExcel%E5%A4%84%E7%90%86%E6%9D%A1%E7%A0%81.html", { loader: () => import(/* webpackChunkName: "posts_Blazor中使用MiniExcel处理条码.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Blazor中使用MiniExcel处理条码.html.js"), meta: {"_blog":{"title":"","author":"","date":null,"category":[],"tag":[],"excerpt":""},"title":""} }],
  ["/posts/Blazor%E4%B8%AD%E4%BD%BF%E7%94%A8MiniExcel%E5%AF%BC%E5%85%A5%E6%95%B0%E6%8D%AE.html", { loader: () => import(/* webpackChunkName: "posts_Blazor中使用MiniExcel导入数据.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Blazor中使用MiniExcel导入数据.html.js"), meta: {"_blog":{"title":"在Blazor中使用MiniExcel实现Excel数据导入","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<h2>概述</h2>\n<p>本文介绍如何在Blazor应用中使用MiniExcel库实现Excel数据的导入功能。MiniExcel是一个轻量级的Excel读写库,具有低内存占用、高性能等特点。我们将结合FreeSql实现数据的批量导入。</p>\n<h2>实现步骤</h2>\n<h3>1. 添加NuGet包引用</h3>\n<p>在项目文件(.csproj)中添加MiniExcel包引用:</p>\n<div class=\"language-xml line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"xml\"><pre><code><span class=\"line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>PackageReference</span> <span class=\"token attr-name\">Include</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>MiniExcel<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">Version</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1.39.0<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div></div></div>"},"title":"在Blazor中使用MiniExcel实现Excel数据导入"} }],
  ["/posts/Blazor%E4%B8%AD%E6%9D%A1%E7%A0%81%E5%8A%A0%E5%AF%86%E6%9C%8D%E5%8A%A1%E5%AE%9E%E7%8E%B0.html", { loader: () => import(/* webpackChunkName: "posts_Blazor中条码加密服务实现.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Blazor中条码加密服务实现.html.js"), meta: {"_blog":{"title":"在Blazor中实现条码加密服务","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<p>在实验室信息管理系统(LIS)中，条码是一个非常重要的标识符，它用于追踪样本、记录检测结果等。为了保护数据安全，我们需要对条码进行加密处理。本文将介绍如何在Blazor应用中实现一个简单但安全的条码加密服务，并结合 MiniExcel 实现 Excel 文件的批量处理。</p>\n<h2>1. 设计接口</h2>\n<p>首先，我们定义了一个条码加密服务的接口：</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IBarcodeEncryption</span></span>\n<span class=\"line\"><span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">EncryptAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> barcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">    <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">DecryptAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> encryptedBarcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"在Blazor中实现条码加密服务"} }],
  ["/posts/Blazor%E5%A4%B4%E5%83%8F%E4%B8%8A%E4%BC%A0%E7%BB%84%E4%BB%B6%E5%88%86%E6%9E%90.html", { loader: () => import(/* webpackChunkName: "posts_Blazor头像上传组件分析.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Blazor头像上传组件分析.html.js"), meta: {"_blog":{"title":"Blazor AvatarUpload 组件实现分析","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<h2>简介</h2>\n<p>在 Blazor 应用程序中，头像上传是一个常见的功能需求。本文将分析一个实现了头像上传功能的组件实现，包括其配置、使用方式和处理逻辑。</p>\n<h2>组件使用示例</h2>\n<div class=\"language-razor line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"razor\"><pre><code><span class=\"line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>AvatarUpload</span> </span>\n<span class=\"line\">    <span class=\"token attr-name\">TValue</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>string<span class=\"token punctuation\">\"</span></span> </span>\n<span class=\"line\">    <span class=\"token attr-name\">Accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/*<span class=\"token punctuation\">\"</span></span> </span>\n<span class=\"line\">    <span class=\"token special-attr\"><span class=\"token attr-name\">OnChange</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value javascript language-javascript\">@OnAvatarUpload</span><span class=\"token punctuation\">\"</span></span></span> </span>\n<span class=\"line\">    <span class=\"token attr-name\">OnDelete</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value variable\"><span class=\"token keyword\">@</span><span class=\"token csharp language-csharp\"><span class=\"token punctuation\">(</span>fileName <span class=\"token operator\">=&gt;</span> Task<span class=\"token punctuation\">.</span><span class=\"token function\">FromResult</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span></span>\n<span class=\"line\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>AvatarUpload</span><span class=\"token punctuation\">&gt;</span></span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"Blazor AvatarUpload 组件实现分析"} }],
  ["/posts/Blazor%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%AE%9E%E7%8E%B0%E8%AF%A6%E8%A7%A3.html", { loader: () => import(/* webpackChunkName: "posts_Blazor文件上传实现详解.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Blazor文件上传实现详解.html.js"), meta: {"_blog":{"title":"Blazor 文件上传实现详解：SaveToFile 方法剖析","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<h2>简介</h2>\n<p>在 Web 应用开发中，文件上传是一个常见的需求。今天我们来分析一个在 Blazor 应用中实现的文件上传方法 <code>SaveToFile</code>，这个方法展示了如何在服务器端处理文件上传并提供用户反馈。</p>\n<h2>代码实现详解</h2>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">bool</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">SaveToFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UploadFile</span> file<span class=\"token punctuation\">)</span></span>\n<span class=\"line\"><span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> ret <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">    <span class=\"token keyword\">try</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">        <span class=\"token comment\">// 获取wwwroot目录的物理路径</span></span>\n<span class=\"line\">        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> webRootPath <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">.</span><span class=\"token function\">Combine</span><span class=\"token punctuation\">(</span>Directory<span class=\"token punctuation\">.</span><span class=\"token function\">GetCurrentDirectory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wwwroot\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> uploaderFolder <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">.</span><span class=\"token function\">Combine</span><span class=\"token punctuation\">(</span>webRootPath<span class=\"token punctuation\">,</span> <span class=\"token string\">\"images\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"uploader\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        </span>\n<span class=\"line\">        <span class=\"token comment\">// 确保目录存在</span></span>\n<span class=\"line\">        Directory<span class=\"token punctuation\">.</span><span class=\"token function\">CreateDirectory</span><span class=\"token punctuation\">(</span>uploaderFolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        </span>\n<span class=\"line\">        <span class=\"token comment\">// 生成唯一文件名</span></span>\n<span class=\"line\">        file<span class=\"token punctuation\">.</span>FileName <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetFileNameWithoutExtension</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>OriginFileName<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">DateTimeOffset<span class=\"token punctuation\">.</span>Now</span><span class=\"token format-string\"><span class=\"token punctuation\">:</span>yyyyMMddHHmmss</span><span class=\"token punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">Path<span class=\"token punctuation\">.</span><span class=\"token function\">GetExtension</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span>OriginFileName<span class=\"token punctuation\">)</span></span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fileName <span class=\"token operator\">=</span> Path<span class=\"token punctuation\">.</span><span class=\"token function\">Combine</span><span class=\"token punctuation\">(</span>uploaderFolder<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">.</span>FileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\">        <span class=\"token comment\">// 保存文件</span></span>\n<span class=\"line\">        ReadToken <span class=\"token operator\">??=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">CancellationTokenSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        ret <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> file<span class=\"token punctuation\">.</span><span class=\"token function\">SaveToFileAsync</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> MaxFileLength<span class=\"token punctuation\">,</span> ReadToken<span class=\"token punctuation\">.</span>Token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\">        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">            file<span class=\"token punctuation\">.</span>PrevUrl <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"/images/uploader/</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">file<span class=\"token punctuation\">.</span>FileName</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">            <span class=\"token keyword\">await</span> MessageService<span class=\"token punctuation\">.</span><span class=\"token function\">Success</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"文件上传成功！\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">        <span class=\"token keyword\">else</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">            <span class=\"token comment\">// 处理保存失败情况</span></span>\n<span class=\"line\">            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> errorMessage <span class=\"token operator\">=</span> <span class=\"token interpolation-string\"><span class=\"token string\">$\"保存文件失败 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">file<span class=\"token punctuation\">.</span>OriginFileName</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">            file<span class=\"token punctuation\">.</span>Code <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">            file<span class=\"token punctuation\">.</span>Error <span class=\"token operator\">=</span> errorMessage<span class=\"token punctuation\">;</span></span>\n<span class=\"line\">            <span class=\"token keyword\">await</span> MessageService<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"上传文件</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">errorMessage</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">        <span class=\"token comment\">// 异常处理</span></span>\n<span class=\"line\">        file<span class=\"token punctuation\">.</span>Code <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        file<span class=\"token punctuation\">.</span>Error <span class=\"token operator\">=</span> ex<span class=\"token punctuation\">.</span>Message<span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        <span class=\"token keyword\">await</span> MessageService<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"文件上传失败: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token expression language-csharp\">ex<span class=\"token punctuation\">.</span>Message</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">        ret <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    <span class=\"token keyword\">return</span> ret<span class=\"token punctuation\">;</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"Blazor 文件上传实现详解：SaveToFile 方法剖析"} }],
  ["/posts/Blazor%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F.html", { loader: () => import(/* webpackChunkName: "posts_Blazor文件下载实现方式.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Blazor文件下载实现方式.html.js"), meta: {"_blog":{"title":"Blazor 文件下载的几种实现方式","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<p>在 Blazor 应用程序中，实现文件下载功能是一个常见需求。本文将介绍几种不同的实现方式，并分析它们的优缺点。</p>\n<h2>1. 使用 JavaScript Interop</h2>\n<p>这是最简单的实现方式，但需要依赖 JavaScript。</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">async</span> <span class=\"token return-type class-name\">Task</span> <span class=\"token function\">DownloadFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\"><span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    <span class=\"token keyword\">await</span> <span class=\"token keyword\">using</span> <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> memoryStream <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MemoryStream</span><span class=\"token punctuation\">(</span>_processedFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> streamRef <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">DotNetStreamReference</span><span class=\"token punctuation\">(</span><span class=\"token named-parameter punctuation\">stream</span><span class=\"token punctuation\">:</span> memoryStream<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token keyword\">await</span> JS<span class=\"token punctuation\">.</span><span class=\"token function\">InvokeVoidAsync</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"downloadFileFromStream\"</span><span class=\"token punctuation\">,</span> streamRef<span class=\"token punctuation\">,</span> newFileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"Blazor 文件下载的几种实现方式"} }],
  ["/posts/Furion%E6%A1%86%E6%9E%B6API%E6%9D%83%E9%99%90%E6%8E%A7%E5%88%B6.html", { loader: () => import(/* webpackChunkName: "posts_Furion框架API权限控制.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/Furion框架API权限控制.html.js"), meta: {"_blog":{"title":"Furion 框架 API 权限控制实践","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<h2>简介</h2>\n<p>在 Web API 开发中，权限控制是一个非常重要的环节。本文将介绍如何使用 Furion 框架的 <code>DynamicApiController</code> 特性来实现 API 的权限控制。</p>\n<h2>代码实现</h2>\n<p>首先，让我们看一个基本的示例：</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Furion<span class=\"token punctuation\">.</span>DynamicApiController</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">Microsoft<span class=\"token punctuation\">.</span>AspNetCore<span class=\"token punctuation\">.</span>Mvc</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ABCLab<span class=\"token punctuation\">.</span>Services</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Route</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"LabSystem/TestCate\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 定义API路由前缀</span></span>\n<span class=\"line\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TestService</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">IDynamicApiController</span></span>  <span class=\"token comment\">// 继承IDynamicApiController接口</span></span>\n<span class=\"line\"><span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpGet</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"@add\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>  <span class=\"token comment\">// 定义HTTP方法和路由</span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">getNames</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">        <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">List<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">            <span class=\"token string\">\"first\"</span><span class=\"token punctuation\">,</span></span>\n<span class=\"line\">            <span class=\"token string\">\"second\"</span><span class=\"token punctuation\">,</span></span>\n<span class=\"line\">            <span class=\"token string\">\"third\"</span></span>\n<span class=\"line\">        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">}</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"Furion 框架 API 权限控制实践"} }],
  ["/posts/archive1.html", { loader: () => import(/* webpackChunkName: "posts_archive1.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/archive1.html.js"), meta: {"_blog":{"title":"Archive Article1","author":"","date":"1998-01-01T00:00:00.000Z","category":["History"],"tag":["WWI"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Archive Article1"} }],
  ["/posts/archive2.html", { loader: () => import(/* webpackChunkName: "posts_archive2.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/archive2.html.js"), meta: {"_blog":{"title":"Archive Article2","author":"","date":"1998-01-02T00:00:00.000Z","category":["History"],"tag":["WWII"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Archive Article2"} }],
  ["/posts/article1.html", { loader: () => import(/* webpackChunkName: "posts_article1.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article1.html.js"), meta: {"_blog":{"title":"Article 1","author":"","date":"2022-01-01T00:00:00.000Z","category":["CategoryA"],"tag":["tag A","tag B"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 1"} }],
  ["/posts/article10.html", { loader: () => import(/* webpackChunkName: "posts_article10.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article10.html.js"), meta: {"_blog":{"title":"Article 10","author":"","date":"2022-01-10T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag C","tag D"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 10"} }],
  ["/posts/article11.html", { loader: () => import(/* webpackChunkName: "posts_article11.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article11.html.js"), meta: {"_blog":{"title":"Article 11","author":"","date":"2022-01-11T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag C","tag D"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 11"} }],
  ["/posts/article12.html", { loader: () => import(/* webpackChunkName: "posts_article12.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article12.html.js"), meta: {"_blog":{"title":"Article 12","author":"","date":"2022-01-12T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag C","tag D"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 12"} }],
  ["/posts/article2.html", { loader: () => import(/* webpackChunkName: "posts_article2.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article2.html.js"), meta: {"_blog":{"title":"Article 2","author":"","date":"2022-01-02T00:00:00.000Z","category":["CategoryA"],"tag":["tag A","tag B"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 2"} }],
  ["/posts/article3.html", { loader: () => import(/* webpackChunkName: "posts_article3.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article3.html.js"), meta: {"_blog":{"title":"Article 3","author":"","date":"2022-01-03T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag A","tag B"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 3"} }],
  ["/posts/article4.html", { loader: () => import(/* webpackChunkName: "posts_article4.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article4.html.js"), meta: {"_blog":{"title":"Article 4","author":"","date":"2022-01-04T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag A","tag B"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 4"} }],
  ["/posts/article5.html", { loader: () => import(/* webpackChunkName: "posts_article5.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article5.html.js"), meta: {"_blog":{"title":"Article 5","author":"","date":"2022-01-05T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag A","tag B"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 5"} }],
  ["/posts/article6.html", { loader: () => import(/* webpackChunkName: "posts_article6.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article6.html.js"), meta: {"_blog":{"title":"Article 6","author":"","date":"2022-01-06T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag A","tag B"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 6"} }],
  ["/posts/article7.html", { loader: () => import(/* webpackChunkName: "posts_article7.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article7.html.js"), meta: {"_blog":{"title":"Article 7","author":"","date":"2022-01-07T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag C","tag D"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 7"} }],
  ["/posts/article8.html", { loader: () => import(/* webpackChunkName: "posts_article8.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article8.html.js"), meta: {"_blog":{"title":"Article 8","author":"","date":"2022-01-08T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag C","tag D"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 8"} }],
  ["/posts/article9.html", { loader: () => import(/* webpackChunkName: "posts_article9.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/article9.html.js"), meta: {"_blog":{"title":"Article 9","author":"","date":"2022-01-09T00:00:00.000Z","category":["CategoryA","CategoryB"],"tag":["tag C","tag D"],"excerpt":"\n<h2>Heading 2</h2>\n<p>Here is the content.</p>\n<h3>Heading 3</h3>\n<p>Here is the content.</p>\n"},"title":"Article 9"} }],
  ["/posts/sticky.html", { loader: () => import(/* webpackChunkName: "posts_sticky.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/sticky.html.js"), meta: {"_blog":{"title":"Sticky Article","author":"","date":"2021-01-01T00:00:00.000Z","category":["CategoryC"],"tag":["tag E"],"excerpt":"<p>A sticky article demo.</p>"},"title":"Sticky Article"} }],
  ["/posts/sticky2.html", { loader: () => import(/* webpackChunkName: "posts_sticky2.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/sticky2.html.js"), meta: {"_blog":{"title":"Sticky Article with Higher Priority","author":"","date":"2020-01-01T00:00:00.000Z","category":["CategoryC"],"tag":["tag E"],"excerpt":"\n<p>Excerpt information which is added manually.</p>\n"},"title":"Sticky Article with Higher Priority"} }],
  ["/posts/%E6%9D%A1%E7%A0%81%E5%8A%A0%E5%AF%86%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%9E%E7%8E%B0.html", { loader: () => import(/* webpackChunkName: "posts_条码加密服务的实现.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/条码加密服务的实现.html.js"), meta: {"_blog":{"title":"在Blazor中实现条码加密服务","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<p>在实验室信息管理系统(LIS)中，条码是一个非常重要的标识符，它用于追踪样本、记录检测结果等。为了保护数据安全，我们需要对条码进行加密处理。本文将介绍如何在Blazor应用中实现一个简单但安全的条码加密服务，并结合 MiniExcel 实现 Excel 文件的批量处理。</p>\n<h2>1. 设计接口</h2>\n<p>首先，我们定义了一个条码加密服务的接口：</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">IBarcodeEncryption</span></span>\n<span class=\"line\"><span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">EncryptAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> barcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\">    <span class=\"token return-type class-name\">Task<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">string</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token function\">DecryptAsync</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">string</span></span> encryptedBarcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"在Blazor中实现条码加密服务"} }],
  ["/posts/%E8%AF%95%E5%89%82%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html", { loader: () => import(/* webpackChunkName: "posts_试剂管理系统.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/试剂管理系统.html.js"), meta: {"_blog":{"title":"试剂管理系统","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<h2>1. 试剂动作管理</h2>\n<ul>\n<li>入库管理</li>\n<li>出库管理</li>\n<li>库存查询</li>\n</ul>\n<h2>2. 试剂库管理</h2>\n<ul>\n<li>分组管理</li>\n<li>库存管理</li>\n<li>试剂验证</li>\n</ul>\n<h2>3. 系统功能</h2>\n<ul>\n<li>供应商管理</li>\n</ul>\n<h2>4. 系统集成</h2>\n<ul>\n<li>成本核算</li>\n<li>LIS系统对接</li>\n</ul>\n"},"title":"试剂管理系统"} }],
  ["/posts/%E8%AF%95%E5%89%82%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%8A%9F%E8%83%BD%E6%A6%82%E8%BF%B0.html", { loader: () => import(/* webpackChunkName: "posts_试剂管理系统功能概述.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/试剂管理系统功能概述.html.js"), meta: {"_blog":{"title":"试剂管理系统","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<h2>1. 试剂动作管理</h2>\n<ul>\n<li>入库管理</li>\n<li>出库管理</li>\n<li>库存查询</li>\n</ul>\n<h2>2. 试剂库管理</h2>\n<ul>\n<li>分组管理</li>\n<li>库存管理</li>\n<li>试剂验证</li>\n</ul>\n<h2>3. 系统功能</h2>\n<ul>\n<li>供应商管理</li>\n</ul>\n<h2>4. 系统集成</h2>\n<ul>\n<li>成本核算</li>\n<li>LIS系统对接</li>\n</ul>\n"},"title":"试剂管理系统"} }],
  ["/posts/%E8%B4%A8%E6%8E%A7%E6%95%B0%E6%8D%AE%E8%AE%AD%E7%BB%83%E5%AE%9E%E4%BD%93%E7%B1%BB%E8%AE%BE%E8%AE%A1.html", { loader: () => import(/* webpackChunkName: "posts_质控数据训练实体类设计.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/质控数据训练实体类设计.html.js"), meta: {"_blog":{"title":"质控数据训练实体类设计与实现","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<h2>概述</h2>\n<p>在实验室质量控制(QC)系统中，训练数据是评估分析性能和建立统计控制限的基础。本文介绍了TrainData实体类的设计与实现，该类用于存储和管理质控数据的统计参数和控制限。</p>\n<h2>实体类设计</h2>\n<p>TrainData实体类继承自EntityCreated基类，包含了质控数据分析所需的各种统计参数。以下是该实体类的完整实现：</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\"><span class=\"token keyword\">namespace</span> <span class=\"token namespace\">ABCLab<span class=\"token punctuation\">.</span>Entities<span class=\"token punctuation\">.</span>QC</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span class=\"token keyword\">using</span> <span class=\"token namespace\">FreeSql<span class=\"token punctuation\">.</span>DataAnnotations</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">TrainData</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EntityCreated</span></span></span>\n<span class=\"line\"><span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 数据个数</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> DataCount <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 均值</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> Mean <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 标准差</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> StandardDeviation <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// α值（2.5%）</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> AlphaValue <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// β值（7.5%）</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> BetaValue <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 下限</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> LowerLimit <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 上限</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> UpperLimit <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 是否截断</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> IsTruncated <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 统计方法</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token punctuation\">[</span><span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>StringLength <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> StatisticalMethod <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 权重</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> Weight <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// Mean（均值）</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> MeanValue <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// SD（标准差）</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> SD <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// MAX（最大值）</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> MAX <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// MIN（最小值）</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> MIN <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 报警线2SD</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> AlarmLine2SD <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 报警线3SD</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> AlarmLine3SD <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// TEA（总允许误差）</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">double</span></span> TEA <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\">    </span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// 第N个数报警</span></span>\n<span class=\"line\">    <span class=\"token doc-comment comment\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>summary</span><span class=\"token punctuation\">&gt;</span></span></span></span>\n<span class=\"line\">    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">int</span></span> AlarmAtNthNumber <span class=\"token punctuation\">{</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"质控数据训练实体类设计与实现"} }],
  ["/posts/%E9%85%8D%E7%BD%AECORS%E7%AD%96%E7%95%A5.html", { loader: () => import(/* webpackChunkName: "posts_配置CORS策略.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/posts/配置CORS策略.html.js"), meta: {"_blog":{"title":"在ASP.NET Core中配置CORS策略","author":"","date":null,"category":[],"tag":[],"excerpt":"\n<p>在现代Web应用程序中，跨域资源共享（CORS）是一个重要的安全特性。它允许或限制不同来源的Web应用程序访问服务器资源。在ASP.NET Core中，我们可以通过配置CORS策略来控制这些访问。</p>\n<h2>配置步骤</h2>\n<h3>1. 添加CORS服务</h3>\n<p>首先，在 <code>Program.cs</code> 文件中，我们需要添加CORS服务。我们可以通过 <code>AddCors</code> 方法来定义一个CORS策略。在这个例子中，我们定义了一个名为 <code>\"CorsPolicy\"</code> 的策略：</p>\n<div class=\"language-csharp line-numbers-mode\" data-highlighter=\"prismjs\" data-ext=\"cs\"><pre><code><span class=\"line\">builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddCors</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">    options<span class=\"token punctuation\">.</span><span class=\"token function\">AddPolicy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CorsPolicy\"</span><span class=\"token punctuation\">,</span> builder <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span></span>\n<span class=\"line\">        builder</span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">WithOrigins</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"http://localhost:3000\"</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">WithOrigins</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://ai.jianyandashu.com\"</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">AllowCredentials</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></span>\n<span class=\"line\">            <span class=\"token punctuation\">.</span><span class=\"token function\">SetIsOriginAllowed</span><span class=\"token punctuation\">(</span>_ <span class=\"token operator\">=&gt;</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 临时添加，用于调试</span></span>\n<span class=\"line\">    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span>\n<span class=\"line\"></span></code></pre>\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>"},"title":"在ASP.NET Core中配置CORS策略"} }],
  ["/404.html", { loader: () => import(/* webpackChunkName: "404.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/404.html.js"), meta: {"title":""} }],
  ["/category/", { loader: () => import(/* webpackChunkName: "category_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/category/index.html.js"), meta: {"title":"Categories"} }],
  ["/category/history/", { loader: () => import(/* webpackChunkName: "category_history_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/category/history/index.html.js"), meta: {"title":"Category History"} }],
  ["/category/categorya/", { loader: () => import(/* webpackChunkName: "category_categorya_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/category/categorya/index.html.js"), meta: {"title":"Category CategoryA"} }],
  ["/category/categoryb/", { loader: () => import(/* webpackChunkName: "category_categoryb_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/category/categoryb/index.html.js"), meta: {"title":"Category CategoryB"} }],
  ["/category/categoryc/", { loader: () => import(/* webpackChunkName: "category_categoryc_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/category/categoryc/index.html.js"), meta: {"title":"Category CategoryC"} }],
  ["/tag/", { loader: () => import(/* webpackChunkName: "tag_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/index.html.js"), meta: {"title":"Tags"} }],
  ["/tag/wwi/", { loader: () => import(/* webpackChunkName: "tag_wwi_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/wwi/index.html.js"), meta: {"title":"Tag WWI"} }],
  ["/tag/wwii/", { loader: () => import(/* webpackChunkName: "tag_wwii_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/wwii/index.html.js"), meta: {"title":"Tag WWII"} }],
  ["/tag/tag-a/", { loader: () => import(/* webpackChunkName: "tag_tag-a_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/tag-a/index.html.js"), meta: {"title":"Tag tag A"} }],
  ["/tag/tag-b/", { loader: () => import(/* webpackChunkName: "tag_tag-b_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/tag-b/index.html.js"), meta: {"title":"Tag tag B"} }],
  ["/tag/tag-c/", { loader: () => import(/* webpackChunkName: "tag_tag-c_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/tag-c/index.html.js"), meta: {"title":"Tag tag C"} }],
  ["/tag/tag-d/", { loader: () => import(/* webpackChunkName: "tag_tag-d_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/tag-d/index.html.js"), meta: {"title":"Tag tag D"} }],
  ["/tag/tag-e/", { loader: () => import(/* webpackChunkName: "tag_tag-e_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/tag/tag-e/index.html.js"), meta: {"title":"Tag tag E"} }],
  ["/article/", { loader: () => import(/* webpackChunkName: "article_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/article/index.html.js"), meta: {"title":"Articles"} }],
  ["/timeline/", { loader: () => import(/* webpackChunkName: "timeline_index.html" */"/Users/Zhuanz/reps/study123/vuepress-starter/docs/.vuepress/.temp/pages/timeline/index.html.js"), meta: {"title":"Timeline"} }],
]);

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updateRoutes) {
    __VUE_HMR_RUNTIME__.updateRoutes(routes)
  }
  if (__VUE_HMR_RUNTIME__.updateRedirects) {
    __VUE_HMR_RUNTIME__.updateRedirects(redirects)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ routes, redirects }) => {
    __VUE_HMR_RUNTIME__.updateRoutes(routes)
    __VUE_HMR_RUNTIME__.updateRedirects(redirects)
  })
}
